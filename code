      /* PASSWORD STRENGTH CHECKER */

import re
import tkinter as tk
from tkinter import messagebox

def password_strength_checker(password):
    score = 0
    feedback = []

    # Check password length
    if len(password) >= 12:
        score += 2
    elif len(password) >= 8:
        score += 1
    else:
        feedback.append("Increase the password length to at least 8 characters.")

    # Check for uppercase letter
    if re.search(r'[A-Z]', password):
        score += 1
    else:
        feedback.append("Add at least one uppercase letter.")

    # Check for lowercase letter
    if re.search(r'[a-z]', password):
        score += 1
    else:
        feedback.append("Add at least one lowercase letter.")

    # Check for numeral
    if re.search(r'[0-9]', password):
        score += 1
    else:
        feedback.append("Include at least one numeral.")

    # Check for special character
    if re.search(r'[!@#$%^&*(),.?":{}|<>]', password):
        score += 1
    else:
        feedback.append("Include at least one special character (e.g., @, #, $).")

    # Check for repeated characters or common patterns
    if len(set(password)) / len(password) < 0.5:
        feedback.append("Avoid repeated characters or predictable patterns.")
    
    # Check for common words or patterns like 'password', '12345', etc.
    if re.search(r'(password|12345|qwerty|admin)', password, re.IGNORECASE):
        feedback.append("Avoid using common words or patterns like 'password' or '12345'.")

    # Assign strength based on score
    if score >= 6:
        strength = "Strong"
    elif score >= 4:
        strength = "Moderate"
    else:
        strength = "Weak"
        feedback.append("Consider combining suggestions above for a stronger password.")
    
    return {
        "strength": strength,
        "score": score,
        "feedback": feedback
    }

# GUI function using Tkinter
def show_password_strength():
    password = entry_password.get()
    result = password_strength_checker(password)

    strength_label.config(text=f"Password Strength: {result['strength']}")
    score_label.config(text=f"Score: {result['score']}/7")

    # Clear the previous feedback
    feedback_listbox.delete(0, tk.END)

    if result['feedback']:
        for suggestion in result['feedback']:
            feedback_listbox.insert(tk.END, suggestion)

# Set up the main window
root = tk.Tk()
root.title("Password Strength Checker")
root.geometry("500x500")  # Set window size to 500x500 pixels

# Create the input label and entry field
label_password = tk.Label(root, text="Enter your password:")
label_password.pack(pady=10)

entry_password = tk.Entry(root, show="*", width=30)
entry_password.pack(pady=10)

# Create a button to check password strength
check_button = tk.Button(root, text="Check Strength", command=show_password_strength)
check_button.pack(pady=20)

# Labels for displaying the strength and score
strength_label = tk.Label(root, text="Password Strength: Not Checked")
strength_label.pack(pady=5)

score_label = tk.Label(root, text="Score: Not Checked")
score_label.pack(pady=5)

# Listbox to display feedback suggestions
feedback_listbox = tk.Listbox(root, width=50, height=6)
feedback_listbox.pack(pady=10)

# Start the GUI loop
root.mainloop()
